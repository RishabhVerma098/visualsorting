{"version":3,"sources":["components/bars/addBars.js","components/helperfunctions/helper.js","components/pretto.js","components/sortingPlate.js","components/heading.js","components/BST/BST.js","components/BSTPlate.js","App.js","index.js"],"names":["addBars","barsList","color","height","tempBarList","i","length","push","duration","className","style","backgroundColor","toString","width","marginLeft","borderBottomLeftRadius","borderBottomRightRadius","fontSize","fontWeight","textAlign","key","getRandomInt","min","max","Math","ceil","floor","random","timeout","ms","Promise","resolve","setTimeout","PrettoSlider","withStyles","root","thumb","border","marginTop","boxShadow","active","valueLabel","left","track","borderRadius","rail","Slider","SortingPlate","state","currentAlgo","delay","onChange","props","onChangeAlgo","onChangeSpeed","changeAlogFromDropDown","algo","setState","changeDelay","showSpeed","this","numberOfBars","valueLabelDisplay","aria-label","defaultValue","slider","Dropdown","Toggle","variant","id","Menu","Item","as","onClick","type","Sort","Component","Heading","options","strings","autoStart","loop","Node","data","right","Bst","array","start","end","mid","insertSortedArray","finalData","traverse","node","queue","shift","BSTPlate","bst","elements","arrangedElements","colorList","findElement","travesal","deactive","createTree","preOrder","addElements","number","round","getRandomNumber","sort","quickChangeColor","element","index","changeTraversal","chooseTrversal","postOrder","inOrder","bfs","a","ans","flag","console","log","borderWidth","borderColor","transform","zIndex","marginRight","class","disabled","placeholder","aria-describedby","value","target","App","currentChosenSortingAlgo","deactivate","ds","handleChange","event","newValue","addelementsTolist","barHeight","barColor","changeColor","bubbleSort","items","j","tmp","swap","leftIndex","rightIndex","temp","partition","pivot","indexOf","quickSort","renderQuickSort","speed","insertionSort","inputArr","sorting","href","rel","React","ReactDOM","render","document","getElementById"],"mappings":"gTAqCeA,EAlBD,SAAAC,GAEZ,IADA,IAhBcC,EAAOC,EAgBjBC,EAAc,GACTC,EAAI,EAAGA,EAAIJ,EAASK,OAAQD,IACnCD,EAAYG,KACV,kBAAC,IAAD,CAAeC,SAAU,IAAKL,OAAQF,EAASI,GAAT,WACpC,yBACEI,UAAU,MACVC,OAtBMR,EAsBUD,EAASI,GAAT,SAtBHF,EAsB4BF,EAASI,GAAT,UApB1C,CACLM,gBAAiBT,EACjBC,OAHMA,EAAOS,WAAa,KAI1BC,MAAO,QACPC,WAAY,OACZC,uBAAwB,MACxBC,wBAAyB,MACzBC,SAAU,QACVC,WAAY,MACZC,UAAW,WAYLC,IAAKf,GAEJJ,EAASI,GAAT,aAKT,OAAOD,GClCIiB,EAAe,SAACC,EAAKC,GAGhC,OAFAD,EAAME,KAAKC,KAAKH,GAChBC,EAAMC,KAAKE,MAAMH,GACVC,KAAKE,MAAMF,KAAKG,UAAYJ,EAAMD,IAAQA,GAEtCM,EAAU,SAAAC,GACrB,OAAO,IAAIC,QAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,M,gBC0BrCI,EA9BMC,YAAW,CAC9BC,KAAM,CACJjC,MAAO,UACPC,OAAQ,GAEViC,MAAO,CACLjC,OAAQ,GACRU,MAAO,GACPF,gBAAiB,OACjB0B,OAAQ,yBACRC,WAAY,EACZxB,YAAa,GACb,2BAA4B,CAC1ByB,UAAW,YAGfC,OAAQ,GACRC,WAAY,CACVC,KAAM,oBAERC,MAAO,CACLxC,OAAQ,EACRyC,aAAc,GAEhBC,KAAM,CACJ1C,OAAQ,EACRyC,aAAc,IA1BGV,CA4BlBY,K,QCgHYC,E,2MAzIbC,MAAQ,CACNC,YAAa,aACbC,MAAO,K,EAETC,SAAW,WACT,EAAKC,MAAMC,aAAa,EAAKL,MAAMC,c,EAGrCK,cAAgB,WACd,EAAKF,MAAME,cAAc,EAAKN,MAAME,Q,EAEtCK,uBAAyB,SAAAC,GACvB,EAAKC,SACH,CACER,YAAaO,GAEf,EAAKL,W,EAITO,YAAc,SAAAR,GACZ,EAAKO,SACH,CACEP,MAAOA,GAET,EAAKI,gB,EAITK,UAAY,WACV,OAAyB,MAArB,EAAKX,MAAME,MACN,OACuB,MAArB,EAAKF,MAAME,MACb,SAEA,Q,wEAGD,IAAD,OACP,OACE,yBAAKzC,UAAU,mBACb,yBAAKA,UAAU,cAAcmD,KAAKR,MAAMpD,SACxC,yBAAKS,UAAU,cACb,yBAAKA,UAAU,UACb,0BAAMA,UAAU,eAAhB,+BAC+B,IAC7B,0BAAMA,UAAU,kCAAhB,YACY,IACV,0BAAMA,UAAU,qBACbmD,KAAKR,MAAMS,gBAIlB,kBAAC,EAAD,CACEpD,UAAU,QACVqD,kBAAkB,OAClBC,aAAW,gBACXC,aAAc,GACdzC,IAAI,KACJD,IAAI,IACJ6B,SAAUS,KAAKR,MAAMa,UAGzB,yBAAKxD,UAAU,aACb,yBAAKA,UAAU,oBACb,kBAACyD,EAAA,EAAD,KACE,kBAACA,EAAA,EAASC,OAAV,CAAiBC,QAAQ,UAAUC,GAAG,kBACnCT,KAAKZ,MAAMC,aAGd,kBAACiB,EAAA,EAASI,KAAV,KACE,kBAACJ,EAAA,EAASK,KAAV,CACEC,GAAG,SAEHC,QAAS,kBAAM,EAAKlB,uBAAuB,gBAH7C,cAOA,kBAACW,EAAA,EAASK,KAAV,CACEC,GAAG,SACHC,QAAS,kBAAM,EAAKlB,uBAAuB,eAF7C,aAMA,kBAACW,EAAA,EAASK,KAAV,CACEC,GAAG,SACHC,QAAS,kBAAM,EAAKlB,uBAAuB,mBAF7C,oBASN,yBAAK9C,UAAU,kBACb,kBAACyD,EAAA,EAAD,KACE,kBAACA,EAAA,EAASC,OAAV,CAAiBC,QAAQ,UAAUC,GAAG,kBACnCT,KAAKD,aAGR,kBAACO,EAAA,EAASI,KAAV,KACE,kBAACJ,EAAA,EAASK,KAAV,CACEC,GAAG,SACHC,QAAS,kBAAM,EAAKf,YAAY,OAFlC,QAMA,kBAACQ,EAAA,EAASK,KAAV,CACEC,GAAG,SACHC,QAAS,kBAAM,EAAKf,YAAY,OAFlC,UAMA,kBAACQ,EAAA,EAASK,KAAV,CACEC,GAAG,SACHC,QAAS,kBAAM,EAAKf,YAAY,OAFlC,YAUR,yBAAKjD,UAAU,cACb,4BACEiE,KAAK,SACLjE,UAAU,+BACVgE,QAASb,KAAKR,MAAMuB,MAHtB,e,GA5HeC,a,iBCkBZC,E,2MAnBb7B,MAAQ,G,wEAEN,OACE,yBAAKvC,UAAU,WACb,0BAAMA,UAAU,iBACd,kBAAC,IAAD,CACEqE,QAAS,CACPC,QAAS,CAAC,qBACVC,WAAW,EACXC,MAAM,EACN/B,MAAO,a,GAXC0B,aCFhBM,EACJ,WAAYC,GAAO,oBACjBvB,KAAKwB,MAAQ,KACbxB,KAAKlB,KAAO,KACZkB,KAAKuB,KAAOA,GAsEDE,E,0GAjEKC,EAAOC,EAAOC,GAC9B,GAAa,MAATF,GAAkC,IAAjBA,EAAMhF,QAAgBiF,EAAQC,EACjD,OAAO,KAET,IAAIC,GAAOF,EAAQC,GAAO,EACtBrD,EAAO,IAAI+C,EAAKI,EAAMG,IAG1B,OAFAtD,EAAKO,KAAOkB,KAAK8B,kBAAkBJ,EAAOC,EAAOE,EAAM,GACvDtD,EAAKiD,MAAQxB,KAAK8B,kBAAkBJ,EAAOG,EAAM,EAAGD,GAC7CrD,I,+BAGAA,GAEP,IAAMwD,EAAY,GAUlB,OARA,SAASC,EAASC,GAEhBF,EAAUpF,KAAKsF,EAAKV,MAChBU,EAAKnD,MAAMkD,EAASC,EAAKnD,MACzBmD,EAAKT,OAAOQ,EAASC,EAAKT,OAGhCQ,CAASzD,GACFwD,I,gCAECxD,GACR,IAAMwD,EAAY,GAUlB,OARA,SAASC,EAASC,GACZA,EAAKnD,MAAMkD,EAASC,EAAKnD,MACzBmD,EAAKT,OAAOQ,EAASC,EAAKT,OAE9BO,EAAUpF,KAAKsF,EAAKV,MAGtBS,CAASzD,GACFwD,I,8BAEDxD,GACN,IAAMwD,EAAY,GAQlB,OANA,SAASC,EAASC,GACZA,EAAKnD,MAAMkD,EAASC,EAAKnD,MAC7BiD,EAAUpF,KAAKsF,EAAKV,MAChBU,EAAKT,OAAOQ,EAASC,EAAKT,OAEhCQ,CAASzD,GACFwD,I,0BAELxD,GAKF,IAJA,IAAI0D,EAAO1D,EACL2D,EAAQ,CAACD,GACTF,EAAY,GAEXG,EAAMxF,SACXuF,EAAOC,EAAMC,SACJrD,MAAMoD,EAAMvF,KAAKsF,EAAKnD,MAC3BmD,EAAKT,OAAOU,EAAMvF,KAAKsF,EAAKT,OAChCO,EAAUpF,KAAKsF,EAAKV,MAGtB,OAAOQ,M,KCqSIK,E,2MArWbC,IAAM,IAAIZ,E,EACVrC,MAAQ,CACNkD,SAAU,GACVC,iBAAkB,GAClBhE,KAAM,KACNiE,UAAW,CAAC,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,SAClEC,YAAa,EACbnD,MAAO,IACPoD,SAAU,WACVC,UAAU,G,EAGZC,WAAa,WACX,IAAIrE,EAAO,EAAK8D,IAAIP,kBAClB,EAAK1C,MAAMkD,SACX,EACA,EAAKlD,MAAMkD,SAAS5F,OAAS,GAG3B6F,EAAmB,EAAKF,IAAIQ,SAAStE,GAEzC,EAAKsB,SACH,CACE0C,iBAAkBA,GAEpB,WACE,EAAK1C,SAAS,CACZtB,KAAMA,O,EAYduE,YAAc,WAGZ,IAFA,IAAIR,EAAW,GAEN7F,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,IAAIsG,EAASnF,KAAKoF,MAAM,EAAKC,gBAAgB,EAAG,KAChDX,EAAS3F,KAAKoG,GAGhBT,EAAWA,EAASY,OAEpB,EAAKrD,SACH,CACEyC,SAAUA,GAEZ,kBAAM,EAAKM,gB,EAIfO,iBAAmB,SAACC,EAAS9G,GAE3B,IADA,IAAI+G,EAAQ,EACH5G,EAAI,EAAGA,EAAI,EAAK2C,MAAMmD,iBAAiB7F,OAAQD,IACtD,GAAI2G,IAAY,EAAKhE,MAAMmD,iBAAiB9F,GAAI,CAC9C4G,EAAQ5G,EACR,MAGJ,IAAI+F,EAAY,EAAKpD,MAAMoD,UAC3BA,EAAUa,GAAS/G,EACnB,EAAKuD,SAAS,CACZ2C,UAAWA,K,EAIfc,gBAAkB,SAAAZ,GAChB,EAAK7C,SAAS,CACZ6C,SAAUA,K,EAIda,eAAiB,WACf,MAA4B,aAAxB,EAAKnE,MAAMsD,SACN,EAAKL,IAAIQ,SAAS,EAAKzD,MAAMb,MACH,cAAxB,EAAKa,MAAMsD,SACb,EAAKL,IAAImB,UAAU,EAAKpE,MAAMb,MACJ,YAAxB,EAAKa,MAAMsD,SACb,EAAKL,IAAIoB,QAAQ,EAAKrE,MAAMb,MAE5B,EAAK8D,IAAIqB,IAAI,EAAKtE,MAAMb,O,EAInCkE,Y,qBAAc,kCAAAkB,EAAA,qDACZ,EAAK9D,SAAS,CACZ8C,UAAU,IAERiB,EAAM,EAAKL,iBACXM,EAAO,EAEXC,QAAQC,IAAI,EAAK3E,MAAMqD,aACdhG,EAAI,EARD,YAQIA,EAAImH,EAAIlH,QARZ,oBASNkH,EAAInH,GAAGO,aAAe,EAAKoC,MAAMqD,YAT3B,wBAUR,EAAKU,iBAAiBS,EAAInH,GAAI,WAVtB,UAWFuB,EAAQ,EAAKoB,MAAME,OAXjB,eAYR+D,EAAQ5G,EACRoH,EAAO,EAbC,oCAgBV,EAAKV,iBAAiBS,EAAInH,GAAI,WAhBpB,UAiBJuB,EAAQ,EAAKoB,MAAME,OAjBf,QAkBV,EAAK6D,iBAAiBS,EAAInH,GAAI,SAlBpB,QAQoBA,IARpB,uBAoBC,IAAToH,GACFC,QAAQC,IAAI,SACZ,EAAKZ,iBAAiBS,EAAIP,GAAQ,UAElCS,QAAQC,IAAI,aAEd,EAAKlE,SAAS,CACZ8C,UAAU,IA3BA,0C,EA+Bd7C,YAAc,SAAAR,GACZ,EAAKO,SAAS,CACZP,MAAOA,K,oFAzFTU,KAAK8C,gB,sCAESpF,EAAKC,GACnB,OAAOC,KAAKG,UAAYJ,EAAMD,GAAOA,I,+BAyF7B,IAAD,OACP,OACE,yBAAKb,UAAU,uBACb,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,QACb,yBACEA,UAAU,OACVC,MAAO,CAAEC,gBAAiBiD,KAAKZ,MAAMoD,UAAU,KAE9CxC,KAAKZ,MAAMmD,iBAAiB,KAGjC,yBAAK1F,UAAU,aACb,wBACEC,MAAO,CACLkH,YAAa,MACbC,YAAa,UACbhH,MAAO,QACPiH,UAAW,iBACXC,OAAQ,MACRjH,WAAY,WAGhB,wBACEJ,MAAO,CACLkH,YAAa,MACbC,YAAa,UACbhH,MAAO,QACPiH,UAAW,gBACXC,OAAQ,KACRC,YAAa,QACb1F,UAAW,YAKjB,yBAAK7B,UAAU,UACb,yBACEA,UAAU,OACVC,MAAO,CAAEC,gBAAiBiD,KAAKZ,MAAMoD,UAAU,KAE9CxC,KAAKZ,MAAMmD,iBAAiB,IAE/B,yBACE1F,UAAU,OACVC,MAAO,CAAEC,gBAAiBiD,KAAKZ,MAAMoD,UAAU,KAE9CxC,KAAKZ,MAAMmD,iBAAiB,KAGjC,yBAAK1F,UAAU,aACb,wBACEC,MAAO,CACLkH,YAAa,MACbC,YAAa,UAEbhH,MAAO,QACPiH,UAAW,iBACXC,OAAQ,MACRjH,WAAY,OACZwB,UAAW,UAGf,wBACE5B,MAAO,CACLkH,YAAa,MACbC,YAAa,UAEbhH,MAAO,QACPiH,UAAW,gBACXC,OAAQ,MACRjH,WAAY,QACZwB,UAAW,WAGf,wBACE5B,MAAO,CACLkH,YAAa,MACbC,YAAa,UAEbhH,MAAO,QACPiH,UAAW,gBACXC,OAAQ,MACRC,YAAa,OACb1F,UAAW,WAGf,wBACE5B,MAAO,CACLkH,YAAa,MACbC,YAAa,UACbhH,MAAO,QACPiH,UAAW,iBACXC,OAAQ,MACRC,YAAa,QACb1F,UAAW,YAIjB,yBAAK7B,UAAU,UACb,yBACEA,UAAU,OACVC,MAAO,CAAEC,gBAAiBiD,KAAKZ,MAAMoD,UAAU,KAE9CxC,KAAKZ,MAAMmD,iBAAiB,IAE/B,yBACE1F,UAAU,OACVC,MAAO,CAAEC,gBAAiBiD,KAAKZ,MAAMoD,UAAU,KAE9CxC,KAAKZ,MAAMmD,iBAAiB,IAE/B,yBACE1F,UAAU,OACVC,MAAO,CAAEC,gBAAiBiD,KAAKZ,MAAMoD,UAAU,KAE9CxC,KAAKZ,MAAMmD,iBAAiB,IAE/B,yBACE1F,UAAU,OACVC,MAAO,CAAEC,gBAAiBiD,KAAKZ,MAAMoD,UAAU,KAE9CxC,KAAKZ,MAAMmD,iBAAiB,MAInC,yBAAK1F,UAAU,oBACb,yBAAKA,UAAU,8BACb,4BACEwH,MAAM,kBACNvD,KAAK,SACLL,GAAG,gBACHI,QAASb,KAAK8C,YACdwB,SAAUtE,KAAKZ,MAAMuD,UALvB,oCAUF,yBAAK0B,MAAM,qBACT,2BACEvD,KAAK,OACLuD,MAAM,eACNE,YAAY,cACZpE,aAAW,cACXqE,mBAAiB,gBACjB1H,MAAO,CAAEC,gBAAiB,UAAWM,SAAU,QAC/CkC,SAAU,SAAAkF,GAAK,OACb,EAAK5E,SAAS,CAAE4C,YAAagC,EAAMC,OAAOD,WAG9C,yBAAKJ,MAAM,sBACT,4BACEA,MAAM,kBACNvD,KAAK,SACLL,GAAG,gBACH3D,MAAO,CAAEO,SAAU,QACnBwD,QAASb,KAAKyC,aALhB,UAWJ,yBAAK5F,UAAU,8BACb,yBAAKA,UAAU,QACf,kBAACyD,EAAA,EAAD,KACE,kBAACA,EAAA,EAASC,OAAV,CAAiBC,QAAQ,OAAOC,GAAG,kBAAnC,UACUT,KAAKZ,MAAME,OAGrB,kBAACgB,EAAA,EAASI,KAAV,KACE,kBAACJ,EAAA,EAASK,KAAV,CACEC,GAAG,SACHC,QAAS,kBAAM,EAAKf,YAAY,OAFlC,QAMA,kBAACQ,EAAA,EAASK,KAAV,CACEC,GAAG,SACHC,QAAS,kBAAM,EAAKf,YAAY,OAFlC,UAMA,kBAACQ,EAAA,EAASK,KAAV,CACEC,GAAG,SACHC,QAAS,kBAAM,EAAKf,YAAY,OAFlC,UAQJ,yBAAKjD,UAAU,QACf,kBAACyD,EAAA,EAAD,KACE,kBAACA,EAAA,EAASC,OAAV,CAAiBC,QAAQ,OAAOC,GAAG,kBAChCT,KAAKZ,MAAMsD,UAGd,kBAACpC,EAAA,EAASI,KAAV,KACE,kBAACJ,EAAA,EAASK,KAAV,CACEC,GAAG,SACHC,QAAS,kBAAM,EAAKyC,gBAAgB,cAFtC,YAMA,kBAAChD,EAAA,EAASK,KAAV,CACEC,GAAG,SACHC,QAAS,kBAAM,EAAKyC,gBAAgB,aAFtC,WAMA,kBAAChD,EAAA,EAASK,KAAV,CACEC,GAAG,SACHC,QAAS,kBAAM,EAAKyC,gBAAgB,eAFtC,aAMA,kBAAChD,EAAA,EAASK,KAAV,CACEC,GAAG,SACHC,QAAS,kBAAM,EAAKyC,gBAAgB,uBAFtC,uBAQJ,yBAAKzG,UAAU,e,GA9VJmE,aCoWR2D,E,2MA9VbvF,MAAQ,CACN/C,SAAU,GACV4D,aAAc,GACdX,MAAO,IACPsF,yBAA0B,aAC1BC,YAAY,EACZC,GAAI,W,EAQNC,aAAe,SAACC,EAAOC,GAChB,EAAK7F,MAAMyF,aACd,EAAKhF,SAAS,CAAEI,aAAcgF,IAC9B,EAAKC,sB,EAITA,kBAAoB,WAIlB,IAHA,IAAIzI,EAAI,EACJF,EAAS,EACTC,EAAc,GACXC,EAAI,EAAK2C,MAAMa,cACpB1D,EAASkB,EAAa,GAAI,KAC1BjB,EAAYG,KAAK,CACfwI,UAAW5I,EACX6I,SAAU,UAEZ3I,GAAQ,EAEV,EAAKoD,SAAS,CACZxD,SAAUG,K,EAId6I,YAAc,SAAC3D,EAAO2B,EAAO/G,GAK3B,OAJAoF,EAAM2B,GAAN,SAA2B/G,EAC3B,EAAKuD,SAAS,CACZxD,SAAUqF,IAELA,G,EAIT4D,W,qBAAa,oCAAA3B,EAAA,qDACX,EAAK9D,SAAS,CACZgF,YAAY,IAEVU,EAAQ,EAAKnG,MAAM/C,SACnBK,EAAS6I,EAAM7I,OACVD,EAAI,EANF,YAMKA,EAAIC,GANT,iBAOA8I,EAAI,EAPJ,YAOOA,EAAI9I,EAASD,EAAI,GAPxB,wBAQH8I,EAAMC,GAAN,UAAwBD,EAAMC,EAAI,GAAV,YAC1BD,EAAQ,EAAKF,YAAYE,EAAOC,EAAG,WACnCD,EAAQ,EAAKF,YAAYE,EAAOC,EAAI,EAAG,WAEnCC,EAAMF,EAAMC,GAAN,UACVD,EAAMC,GAAN,UAAwBD,EAAMC,EAAI,GAAV,UACxBD,EAAMC,EAAI,GAAV,UAA4BC,GAdvB,UAgBDzH,EAAQ,EAAKoB,MAAME,OAhBlB,QAiBPiG,EAAQ,EAAKF,YAAYE,EAAOC,EAAG,SACnCD,EAAQ,EAAKF,YAAYE,EAAOC,EAAI,EAAG,WAEvC,EAAK3F,SAAS,CACZxD,SAAUkJ,IArBL,QAO2BC,IAP3B,uBAMiB/I,IANjB,uBA0BX,IADI8I,EAAQ,EAAKnG,MAAM/C,SACdI,EAAI,EAAGA,EAAIC,EAAQD,IAC1B8I,EAAM9I,GAAN,SAAuB,QAEzB,EAAKoD,SAAS,CACZxD,SAAUkJ,IAEZ,EAAK1F,SAAS,CACZgF,YAAY,IAjCH,0C,EAsCb1B,iBAAmB,SAACE,EAAO/G,GACzB,IAAIoF,EAAQ,EAAKtC,MAAM/C,SACvBqF,EAAM2B,GAAN,SAA2B/G,EAC3B,EAAKuD,SAAS,CACZxD,SAAUqF,K,EAGdgE,KAAO,SAACC,EAAWC,GACjB,IAAIL,EAAQ,EAAKnG,MAAM/C,SACnBwJ,EAAON,EAAMI,GACjBJ,EAAMI,GAAaJ,EAAMK,GACzBL,EAAMK,GAAcC,EACpB,EAAKhG,SAAS,CACZxD,SAAUkJ,K,EAGdO,U,sCAAY,WAAOhH,EAAM0C,GAAb,mBAAAmC,EAAA,qDACNoC,EAAQ,EAAK3G,MAAM/C,SAASuB,KAAKE,OAAO0D,EAAQ1C,GAAQ,IAE5D,EAAKqE,iBAAiB,EAAK/D,MAAM/C,SAAS2J,QAAQD,GAAQ,WACtDtJ,EAAIqC,EACJ0G,EAAIhE,EALE,YAMH/E,GAAK+I,GANF,6BAOD,EAAKpG,MAAM/C,SAASI,GAApB,UAAsCsJ,EAAK,WAP1C,wBAQNtJ,IACA,EAAK0G,iBAAiB1G,EAAG,WATnB,UAUAuB,EAAQ,EAAKoB,MAAME,OAVnB,QAWN,EAAK6D,iBAAiB1G,EAAG,SAXnB,4BAaD,EAAK2C,MAAM/C,SAASmJ,GAApB,UAAsCO,EAAK,WAb1C,wBAcNP,IACA,EAAKrC,iBAAiBqC,EAAG,WAfnB,UAgBAxH,EAAQ,EAAKoB,MAAME,OAhBnB,QAiBN,EAAK6D,iBAAiBqC,EAAG,SAjBnB,wBAmBJ/I,GAAK+I,IACP,EAAKE,KAAKjJ,EAAG+I,GACb/I,IACA+I,KAtBM,gDA0BH/I,GA1BG,0C,0DA6BZwJ,U,sCAAY,WAAOnH,EAAM0C,GAAb,eAAAmC,EAAA,0DAEN,EAAKvE,MAAM/C,SAASK,OAAS,GAFvB,iCAGM,EAAKoJ,UAAUhH,EAAM0C,GAH3B,cAGR6B,EAHQ,OAIR,EAAKF,iBAAiBE,EAAO,WAJrB,SAKFrF,EAAQ,EAAKoB,MAAME,OALjB,OAMR,EAAK6D,iBAAiBE,EAAO,SACzBvE,EAAOuE,EAAQ,GACjB,EAAK4C,UAAUnH,EAAMuE,EAAQ,GAE3BA,EAAQ7B,GACV,EAAKyE,UAAU5C,EAAO7B,GAXhB,0C,0DAgBZ0E,gBAAkB,WAChB,EAAKD,UAAU,EAAG,EAAK7G,MAAM/C,SAASK,OAAS,I,EAGjD+C,aAAe,SAAAG,GACb,EAAKC,SAAS,CACZ+E,yBAA0BhF,K,EAI9BF,cAAgB,SAAAyG,GACd,EAAKtG,SAAS,CACZP,MAAO6G,K,EAsEXC,c,qBAAgB,wCAAAzC,EAAA,qDACV0C,EAAW,EAAKjH,MAAM/C,SACtBK,EAAS2J,EAAS3J,OACtB,EAAKmD,SAAS,CACZgF,YAAY,IAELpI,EAAI,EANC,YAMEA,EAAIC,GANN,wBAORc,EAAM6I,EAAS5J,GACnB,EAAK0G,iBAAiB,EAAK/D,MAAM/C,SAAS2J,QAAQxI,GAAM,WAR5C,SASNQ,EAAQ,EAAKoB,MAAME,OATb,OAURkG,EAAI/I,EAAI,EAVA,aAWL+I,GAAK,GAAKa,EAASb,GAAT,UAA2BhI,EAAG,WAXnC,wBAYV6I,EAASb,EAAI,GAAKa,EAASb,GAC3B,EAAKrC,iBAAiBqC,EAAI,EAAG,WAC7B,EAAK3F,SAAS,CACZxD,SAAUgK,IAfF,UAiBJrI,EAAQ,EAAKoB,MAAME,OAjBf,eAkBV,EAAK6D,iBAAiBqC,EAAI,EAAG,SAlBnB,UAmBJxH,EAAQ,EAAKoB,MAAME,OAnBf,QAoBVkG,GAAQ,EApBE,wBAsBZa,EAASb,EAAI,GAAKhI,EAClB,EAAK2F,iBAAiBqC,EAAI,EAAG,WAvBjB,QAMc/I,IANd,uBA0Bd,IADI8I,EAAQ,EAAKnG,MAAM/C,SACdI,EAAI,EAAGA,EAAI8I,EAAM7I,OAAQD,IAChC8I,EAAM9I,GAAN,SAAuB,QAEzB,EAAKoD,SAAS,CACZxD,SAAUkJ,IAEZ,EAAK1F,SAAS,CACZgF,YAAY,IAjCA,0C,EAoChByB,QAAU,WACR,OAAK,EAAKlH,MAAMyF,WASP,KARqC,eAAxC,EAAKzF,MAAMwF,yBACN,EAAKU,WACqC,cAAxC,EAAKlG,MAAMwF,yBACb,EAAKsB,gBACqC,kBAAxC,EAAK9G,MAAMwF,yBACb,EAAKwB,mBADP,G,mFApQTpG,KAAKkF,oBACL9I,EAAQ4D,KAAKZ,MAAM/C,Y,+BA2QX,IAAD,OACP,OACE,yBAAKQ,UAAU,mBACb,yBAAKA,UAAU,8BACb,yBAAKA,UAAU,WACb,kBAAC,EAAD,QAGJ,yBAAKA,UAAU,8BACb,uBACE0J,KAAK,mDACL1J,UAAU,aACV6H,OAAO,SACP8B,IAAI,YAEJ,uBAAG3J,UAAU,kBANf,gBAMiD,QAGnD,yBAAKA,UAAU,OAAOC,MAAO,CAAE4B,UAAW,OAAQxB,WAAY,QAC5D,4BACE4D,KAAK,SACLuD,MACoB,YAAlBrE,KAAKZ,MAAM0F,GACP,yBACA,iCAENjE,QAAS,kBACP,EAAKhB,SAAS,CACZiF,GAAI,aAGRhI,MAAO,CAAEkC,aAAc,SAZzB,WAiBA,4BACE8B,KAAK,SACLuD,MACoB,SAAlBrE,KAAKZ,MAAM0F,GACP,sBACA,8BAENhI,MAAO,CAAEI,WAAY,OAAQ8B,aAAc,QAC3C6B,QAAS,kBACP,EAAKhB,SAAS,CACZiF,GAAI,WAVV,wBAiBF,yBAAKjI,UAAU,+BACM,YAAlBmD,KAAKZ,MAAM0F,GACV,kBAAC,EAAD,CACE7E,aAAcD,KAAKZ,MAAMa,aACzB7D,QAASA,EAAQ4D,KAAKZ,MAAM/C,UAC5BA,SAAU2D,KAAKZ,MAAM/C,SACrBgE,OAAQL,KAAK+E,aACbhE,KAAMf,KAAKsG,UACX7G,aAAcO,KAAKP,aACnBC,cAAeM,KAAKN,gBAGtB,kBAAC,EAAD,Y,GAxVM+G,IAAMzF,WCNxB0F,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.dc9658f9.chunk.js","sourcesContent":["import React from \"react\";\r\nimport AnimateHeight from \"react-animate-height\";\r\nimport \"../../App.css\";\r\n//Temporary\r\nvar barStyle = (color, height) => {\r\n  var h = height.toString() + \"px\";\r\n  return {\r\n    backgroundColor: color,\r\n    height: h,\r\n    width: \"1.8vw\",\r\n    marginLeft: \"10px\",\r\n    borderBottomLeftRadius: \"4px\",\r\n    borderBottomRightRadius: \"4px\",\r\n    fontSize: \"0.7vw\",\r\n    fontWeight: \"200\",\r\n    textAlign: \"center\"\r\n  };\r\n};\r\n\r\nvar addBars = barsList => {\r\n  var tempBarList = [];\r\n  for (let i = 0; i < barsList.length; i++) {\r\n    tempBarList.push(\r\n      <AnimateHeight duration={500} height={barsList[i][\"barHeight\"]}>\r\n        <div\r\n          className=\"Bar\"\r\n          style={barStyle(barsList[i][\"barColor\"], barsList[i][\"barHeight\"])}\r\n          key={i}\r\n        >\r\n          {barsList[i][\"barHeight\"]}\r\n        </div>\r\n      </AnimateHeight>\r\n    );\r\n  }\r\n  return tempBarList;\r\n};\r\n\r\nexport default addBars;\r\n","export const getRandomInt = (min, max) => {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min)) + min; //The maximum is exclusive and the minimum is inclusive\r\n};\r\nexport const timeout = ms => {\r\n  return new Promise(resolve => setTimeout(resolve, ms));\r\n};\r\n","import { withStyles } from \"@material-ui/core/styles\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nconst PrettoSlider = withStyles({\r\n  root: {\r\n    color: \"#52af77\",\r\n    height: 6\r\n  },\r\n  thumb: {\r\n    height: 24,\r\n    width: 24,\r\n    backgroundColor: \"#fff\",\r\n    border: \"2px solid currentColor\",\r\n    marginTop: -8,\r\n    marginLeft: -12,\r\n    \"&:focus,&:hover,&$active\": {\r\n      boxShadow: \"inherit\"\r\n    }\r\n  },\r\n  active: {},\r\n  valueLabel: {\r\n    left: \"calc(-50% + 4px)\"\r\n  },\r\n  track: {\r\n    height: 6,\r\n    borderRadius: 4\r\n  },\r\n  rail: {\r\n    height: 6,\r\n    borderRadius: 4\r\n  }\r\n})(Slider);\r\n\r\nexport default PrettoSlider;\r\n","import React, { Component } from \"react\";\r\n\r\nimport PrettoSlider from \"./pretto\";\r\nimport { Dropdown } from \"react-bootstrap\";\r\nclass SortingPlate extends Component {\r\n  state = {\r\n    currentAlgo: \"BubbleSort\",\r\n    delay: 400\r\n  };\r\n  onChange = () => {\r\n    this.props.onChangeAlgo(this.state.currentAlgo);\r\n  };\r\n\r\n  onChangeSpeed = () => {\r\n    this.props.onChangeSpeed(this.state.delay);\r\n  };\r\n  changeAlogFromDropDown = algo => {\r\n    this.setState(\r\n      {\r\n        currentAlgo: algo\r\n      },\r\n      this.onChange\r\n    );\r\n  };\r\n\r\n  changeDelay = delay => {\r\n    this.setState(\r\n      {\r\n        delay: delay\r\n      },\r\n      this.onChangeSpeed\r\n    );\r\n  };\r\n\r\n  showSpeed = () => {\r\n    if (this.state.delay === 600) {\r\n      return \"Slow\";\r\n    } else if (this.state.delay === 400) {\r\n      return \"Medium\";\r\n    } else {\r\n      return \"Fast\";\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"container-plate\">\r\n        <div className=\"container1\">{this.props.addBars}</div>\r\n        <div className=\"container2\">\r\n          <div className=\"slider\">\r\n            <span className=\"sliderTitle\">\r\n              Slide to add or delete bars,{\" \"}\r\n              <span className=\"badge badge-pill badge-success\">\r\n                Currently{\" \"}\r\n                <span className=\"badge badge-light\">\r\n                  {this.props.numberOfBars}\r\n                </span>\r\n              </span>\r\n            </span>\r\n            <PrettoSlider\r\n              className=\"slide\"\r\n              valueLabelDisplay=\"auto\"\r\n              aria-label=\"pretto slider\"\r\n              defaultValue={12}\r\n              max=\"18\"\r\n              min=\"2\"\r\n              onChange={this.props.slider}\r\n            />\r\n          </div>\r\n          <div className=\"dropDowns\">\r\n            <div className=\"sortingTechnique\">\r\n              <Dropdown>\r\n                <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n                  {this.state.currentAlgo}\r\n                </Dropdown.Toggle>\r\n\r\n                <Dropdown.Menu>\r\n                  <Dropdown.Item\r\n                    as=\"button\"\r\n                    //if you want to pass info from a button use arrow func inside onClick/onSelect VERY IMPORTTANT\r\n                    onClick={() => this.changeAlogFromDropDown(\"BubbleSort\")}\r\n                  >\r\n                    BubbleSort\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Item\r\n                    as=\"button\"\r\n                    onClick={() => this.changeAlogFromDropDown(\"QuickSort\")}\r\n                  >\r\n                    QuickSort\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Item\r\n                    as=\"button\"\r\n                    onClick={() => this.changeAlogFromDropDown(\"InsertionSort\")}\r\n                  >\r\n                    InsertionSort\r\n                  </Dropdown.Item>\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </div>\r\n            <div className=\"speedOfSorting\">\r\n              <Dropdown>\r\n                <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n                  {this.showSpeed()}\r\n                </Dropdown.Toggle>\r\n\r\n                <Dropdown.Menu>\r\n                  <Dropdown.Item\r\n                    as=\"button\"\r\n                    onClick={() => this.changeDelay(600)}\r\n                  >\r\n                    Slow\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Item\r\n                    as=\"button\"\r\n                    onClick={() => this.changeDelay(400)}\r\n                  >\r\n                    Medium\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Item\r\n                    as=\"button\"\r\n                    onClick={() => this.changeDelay(200)}\r\n                  >\r\n                    Fast\r\n                  </Dropdown.Item>\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </div>\r\n          </div>\r\n          <div className=\"sortButton\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-warning btn-sm sort \"\r\n              onClick={this.props.Sort}\r\n            >\r\n              Sort\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SortingPlate;\r\n","import React, { Component } from \"react\";\r\nimport Typewriter from \"typewriter-effect\";\r\nclass Heading extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div className=\"Heading\">\r\n        <span className=\"visualsorting\">\r\n          <Typewriter\r\n            options={{\r\n              strings: [\"Visual Algo's ...\"],\r\n              autoStart: true,\r\n              loop: true,\r\n              delay: 200\r\n            }}\r\n          />\r\n        </span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Heading;\r\n","class Node {\r\n  constructor(data) {\r\n    this.right = null;\r\n    this.left = null;\r\n    this.data = data;\r\n  }\r\n}\r\n\r\nclass Bst {\r\n  insertSortedArray(array, start, end) {\r\n    if (array == null || array.length === 0 || start > end) {\r\n      return null;\r\n    }\r\n    var mid = (start + end) / 2;\r\n    var root = new Node(array[mid]);\r\n    root.left = this.insertSortedArray(array, start, mid - 1);\r\n    root.right = this.insertSortedArray(array, mid + 1, end);\r\n    return root;\r\n  }\r\n\r\n  preOrder(root) {\r\n    // final preorder list\r\n    const finalData = [];\r\n\r\n    function traverse(node) {\r\n      // push the data\r\n      finalData.push(node.data);\r\n      if (node.left) traverse(node.left);\r\n      if (node.right) traverse(node.right);\r\n    }\r\n\r\n    traverse(root);\r\n    return finalData;\r\n  }\r\n  postOrder(root) {\r\n    const finalData = [];\r\n\r\n    function traverse(node) {\r\n      if (node.left) traverse(node.left);\r\n      if (node.right) traverse(node.right);\r\n      // push the data\r\n      finalData.push(node.data);\r\n    }\r\n\r\n    traverse(root);\r\n    return finalData;\r\n  }\r\n  inOrder(root) {\r\n    const finalData = [];\r\n\r\n    function traverse(node) {\r\n      if (node.left) traverse(node.left);\r\n      finalData.push(node.data);\r\n      if (node.right) traverse(node.right);\r\n    }\r\n    traverse(root);\r\n    return finalData;\r\n  }\r\n  bfs(root) {\r\n    let node = root;\r\n    const queue = [node];\r\n    const finalData = [];\r\n\r\n    while (queue.length) {\r\n      node = queue.shift();\r\n      if (node.left) queue.push(node.left);\r\n      if (node.right) queue.push(node.right);\r\n      finalData.push(node.data);\r\n    }\r\n\r\n    return finalData;\r\n  }\r\n}\r\n\r\nexport default Bst;\r\n","import React, { Component } from \"react\";\r\nimport Bst from \"./BST/BST\";\r\nimport { timeout } from \"./helperfunctions/helper\";\r\nimport { Dropdown } from \"react-bootstrap\";\r\n\r\nclass BSTPlate extends Component {\r\n  bst = new Bst();\r\n  state = {\r\n    elements: [],\r\n    arrangedElements: [],\r\n    root: null,\r\n    colorList: [\"beige\", \"beige\", \"beige\", \"beige\", \"beige\", \"beige\", \"beige\"],\r\n    findElement: 0,\r\n    delay: 700,\r\n    travesal: \"preOrder\",\r\n    deactive: false\r\n  };\r\n\r\n  createTree = () => {\r\n    var root = this.bst.insertSortedArray(\r\n      this.state.elements,\r\n      0,\r\n      this.state.elements.length - 1\r\n    );\r\n\r\n    var arrangedElements = this.bst.preOrder(root);\r\n\r\n    this.setState(\r\n      {\r\n        arrangedElements: arrangedElements\r\n      },\r\n      () => {\r\n        this.setState({\r\n          root: root\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  componentWillMount() {\r\n    this.addElements();\r\n  }\r\n  getRandomNumber(min, max) {\r\n    return Math.random() * (max - min) + min;\r\n  }\r\n  addElements = () => {\r\n    var elements = [];\r\n\r\n    for (let i = 0; i < 7; i++) {\r\n      var number = Math.round(this.getRandomNumber(1, 99));\r\n      elements.push(number);\r\n    }\r\n\r\n    elements = elements.sort();\r\n\r\n    this.setState(\r\n      {\r\n        elements: elements\r\n      },\r\n      () => this.createTree()\r\n    );\r\n  };\r\n\r\n  quickChangeColor = (element, color) => {\r\n    var index = 0;\r\n    for (let i = 0; i < this.state.arrangedElements.length; i++) {\r\n      if (element === this.state.arrangedElements[i]) {\r\n        index = i;\r\n        break;\r\n      }\r\n    }\r\n    var colorList = this.state.colorList;\r\n    colorList[index] = color;\r\n    this.setState({\r\n      colorList: colorList\r\n    });\r\n  };\r\n\r\n  changeTraversal = travesal => {\r\n    this.setState({\r\n      travesal: travesal\r\n    });\r\n  };\r\n\r\n  chooseTrversal = () => {\r\n    if (this.state.travesal === \"preOrder\") {\r\n      return this.bst.preOrder(this.state.root);\r\n    } else if (this.state.travesal === \"postOrder\") {\r\n      return this.bst.postOrder(this.state.root);\r\n    } else if (this.state.travesal === \"inOrder\") {\r\n      return this.bst.inOrder(this.state.root);\r\n    } else {\r\n      return this.bst.bfs(this.state.root);\r\n    }\r\n  };\r\n\r\n  findElement = async () => {\r\n    this.setState({\r\n      deactive: true\r\n    });\r\n    var ans = this.chooseTrversal();\r\n    var flag = 0;\r\n    var index;\r\n    console.log(this.state.findElement);\r\n    for (let i = 0; i < ans.length; i++) {\r\n      if (ans[i].toString() === this.state.findElement) {\r\n        this.quickChangeColor(ans[i], \"#8de683\");\r\n        await timeout(this.state.delay);\r\n        index = i;\r\n        flag = 1;\r\n        break;\r\n      }\r\n      this.quickChangeColor(ans[i], \"#68a8ad\");\r\n      await timeout(this.state.delay);\r\n      this.quickChangeColor(ans[i], \"beige\");\r\n    }\r\n    if (flag === 1) {\r\n      console.log(\"found\");\r\n      this.quickChangeColor(ans[index], \"beige\");\r\n    } else {\r\n      console.log(\"not found\");\r\n    }\r\n    this.setState({\r\n      deactive: false\r\n    });\r\n  };\r\n\r\n  changeDelay = delay => {\r\n    this.setState({\r\n      delay: delay\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"container-bst-plate\">\r\n        <div className=\"container-plate1\">\r\n          <div className=\"root\">\r\n            <div\r\n              className=\"Node\"\r\n              style={{ backgroundColor: this.state.colorList[0] }}\r\n            >\r\n              {this.state.arrangedElements[0]}\r\n            </div>\r\n          </div>\r\n          <div className=\"connector\">\r\n            <hr\r\n              style={{\r\n                borderWidth: \"2px\",\r\n                borderColor: \"#48494a\",\r\n                width: \"160px\",\r\n                transform: \"rotate(-28deg)\",\r\n                zIndex: \"-10\",\r\n                marginLeft: \"198px\"\r\n              }}\r\n            ></hr>\r\n            <hr\r\n              style={{\r\n                borderWidth: \"2px\",\r\n                borderColor: \"#48494a\",\r\n                width: \"157px\",\r\n                transform: \"rotate(28deg)\",\r\n                zIndex: \"10\",\r\n                marginRight: \"200px\",\r\n                marginTop: \"-20px\"\r\n              }}\r\n            ></hr>\r\n          </div>\r\n\r\n          <div className=\"depth1\">\r\n            <div\r\n              className=\"Node\"\r\n              style={{ backgroundColor: this.state.colorList[1] }}\r\n            >\r\n              {this.state.arrangedElements[1]}\r\n            </div>\r\n            <div\r\n              className=\"Node\"\r\n              style={{ backgroundColor: this.state.colorList[4] }}\r\n            >\r\n              {this.state.arrangedElements[4]}\r\n            </div>\r\n          </div>\r\n          <div className=\"connector\">\r\n            <hr\r\n              style={{\r\n                borderWidth: \"2px\",\r\n                borderColor: \"#48494a\",\r\n\r\n                width: \"120px\",\r\n                transform: \"rotate(-60deg)\",\r\n                zIndex: \"-10\",\r\n                marginLeft: \"83px\",\r\n                marginTop: \"50px\"\r\n              }}\r\n            ></hr>\r\n            <hr\r\n              style={{\r\n                borderWidth: \"2px\",\r\n                borderColor: \"#48494a\",\r\n\r\n                width: \"120px\",\r\n                transform: \"rotate(55deg)\",\r\n                zIndex: \"-10\",\r\n                marginLeft: \"170px\",\r\n                marginTop: \"-20px\"\r\n              }}\r\n            ></hr>\r\n            <hr\r\n              style={{\r\n                borderWidth: \"2px\",\r\n                borderColor: \"#48494a\",\r\n\r\n                width: \"120px\",\r\n                transform: \"rotate(55deg)\",\r\n                zIndex: \"-10\",\r\n                marginRight: \"80px\",\r\n                marginTop: \"-20px\"\r\n              }}\r\n            ></hr>\r\n            <hr\r\n              style={{\r\n                borderWidth: \"2px\",\r\n                borderColor: \"#48494a\",\r\n                width: \"120px\",\r\n                transform: \"rotate(-55deg)\",\r\n                zIndex: \"-10\",\r\n                marginRight: \"175px\",\r\n                marginTop: \"-20px\"\r\n              }}\r\n            ></hr>\r\n          </div>\r\n          <div className=\"depth2\">\r\n            <div\r\n              className=\"Node\"\r\n              style={{ backgroundColor: this.state.colorList[2] }}\r\n            >\r\n              {this.state.arrangedElements[2]}\r\n            </div>\r\n            <div\r\n              className=\"Node\"\r\n              style={{ backgroundColor: this.state.colorList[3] }}\r\n            >\r\n              {this.state.arrangedElements[3]}\r\n            </div>\r\n            <div\r\n              className=\"Node\"\r\n              style={{ backgroundColor: this.state.colorList[5] }}\r\n            >\r\n              {this.state.arrangedElements[5]}\r\n            </div>\r\n            <div\r\n              className=\"Node\"\r\n              style={{ backgroundColor: this.state.colorList[6] }}\r\n            >\r\n              {this.state.arrangedElements[6]}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"container-plate2\">\r\n          <div className=\"row justify-content-center\">\r\n            <button\r\n              class=\"btn btn-success\"\r\n              type=\"button\"\r\n              id=\"button-addon2\"\r\n              onClick={this.addElements}\r\n              disabled={this.state.deactive}\r\n            >\r\n              Press to Randomly generate tree\r\n            </button>\r\n          </div>\r\n          <div class=\"input-group mb-3 \">\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              placeholder=\"Find number\"\r\n              aria-label=\"Find number\"\r\n              aria-describedby=\"button-addon2\"\r\n              style={{ backgroundColor: \"#bfc9d9\", fontSize: \"13px\" }}\r\n              onChange={value =>\r\n                this.setState({ findElement: value.target.value })\r\n              }\r\n            />\r\n            <div class=\"input-group-append\">\r\n              <button\r\n                class=\"btn btn-primary\"\r\n                type=\"button\"\r\n                id=\"button-addon2\"\r\n                style={{ fontSize: \"13px\" }}\r\n                onClick={this.findElement}\r\n              >\r\n                Find\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div className=\"row justify-content-center\">\r\n            <div className=\"col\"></div>\r\n            <Dropdown>\r\n              <Dropdown.Toggle variant=\"info\" id=\"dropdown-basic\">\r\n                Speed: {this.state.delay}\r\n              </Dropdown.Toggle>\r\n\r\n              <Dropdown.Menu>\r\n                <Dropdown.Item\r\n                  as=\"button\"\r\n                  onClick={() => this.changeDelay(1000)}\r\n                >\r\n                  Slow\r\n                </Dropdown.Item>\r\n                <Dropdown.Item\r\n                  as=\"button\"\r\n                  onClick={() => this.changeDelay(700)}\r\n                >\r\n                  Medium\r\n                </Dropdown.Item>\r\n                <Dropdown.Item\r\n                  as=\"button\"\r\n                  onClick={() => this.changeDelay(500)}\r\n                >\r\n                  Fast\r\n                </Dropdown.Item>\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n            <div className=\"col\"></div>\r\n            <Dropdown>\r\n              <Dropdown.Toggle variant=\"info\" id=\"dropdown-basic\">\r\n                {this.state.travesal}\r\n              </Dropdown.Toggle>\r\n\r\n              <Dropdown.Menu>\r\n                <Dropdown.Item\r\n                  as=\"button\"\r\n                  onClick={() => this.changeTraversal(\"preOrder\")}\r\n                >\r\n                  preOrder\r\n                </Dropdown.Item>\r\n                <Dropdown.Item\r\n                  as=\"button\"\r\n                  onClick={() => this.changeTraversal(\"inOrder\")}\r\n                >\r\n                  inOrder\r\n                </Dropdown.Item>\r\n                <Dropdown.Item\r\n                  as=\"button\"\r\n                  onClick={() => this.changeTraversal(\"postOrder\")}\r\n                >\r\n                  postOrder\r\n                </Dropdown.Item>\r\n                <Dropdown.Item\r\n                  as=\"button\"\r\n                  onClick={() => this.changeTraversal(\"breathFirstSearch\")}\r\n                >\r\n                  breathFirstSearch\r\n                </Dropdown.Item>\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n            <div className=\"col\"></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BSTPlate;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport addBars from \"./components/bars/addBars\";\r\n\r\nimport { getRandomInt, timeout } from \"./components/helperfunctions/helper\";\r\n\r\nimport SortingPlate from \"./components/sortingPlate\";\r\nimport Heading from \"./components/heading\";\r\nimport BSTPlate from \"./components/BSTPlate\";\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    barsList: [],\r\n    numberOfBars: 13,\r\n    delay: 400,\r\n    currentChosenSortingAlgo: \"BubbleSort\",\r\n    deactivate: false,\r\n    ds: \"sorting\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.addelementsTolist();\r\n    addBars(this.state.barsList);\r\n  }\r\n\r\n  handleChange = (event, newValue) => {\r\n    if (!this.state.deactivate) {\r\n      this.setState({ numberOfBars: newValue });\r\n      this.addelementsTolist();\r\n    }\r\n  };\r\n\r\n  addelementsTolist = () => {\r\n    var i = 0;\r\n    var height = 0;\r\n    var tempBarList = [];\r\n    while (i < this.state.numberOfBars) {\r\n      height = getRandomInt(20, 380);\r\n      tempBarList.push({\r\n        barHeight: height,\r\n        barColor: \"beige\"\r\n      });\r\n      i = i + 1;\r\n    }\r\n    this.setState({\r\n      barsList: tempBarList\r\n    });\r\n  };\r\n\r\n  changeColor = (array, index, color) => {\r\n    array[index][\"barColor\"] = color;\r\n    this.setState({\r\n      barsList: array\r\n    });\r\n    return array;\r\n  };\r\n\r\n  //Bubble Sort\r\n  bubbleSort = async () => {\r\n    this.setState({\r\n      deactivate: true\r\n    });\r\n    var items = this.state.barsList;\r\n    var length = items.length;\r\n    for (var i = 0; i < length; i++) {\r\n      for (var j = 0; j < length - i - 1; j++) {\r\n        if (items[j][\"barHeight\"] > items[j + 1][\"barHeight\"]) {\r\n          items = this.changeColor(items, j, \"#91d3e3\");\r\n          items = this.changeColor(items, j + 1, \"#91d3e3\");\r\n\r\n          var tmp = items[j][\"barHeight\"];\r\n          items[j][\"barHeight\"] = items[j + 1][\"barHeight\"];\r\n          items[j + 1][\"barHeight\"] = tmp;\r\n        }\r\n        await timeout(this.state.delay);\r\n        items = this.changeColor(items, j, \"beige\");\r\n        items = this.changeColor(items, j + 1, \"#91e395\");\r\n\r\n        this.setState({\r\n          barsList: items\r\n        });\r\n      }\r\n    }\r\n    var items = this.state.barsList;\r\n    for (var i = 0; i < length; i++) {\r\n      items[i][\"barColor\"] = \"beige\";\r\n    }\r\n    this.setState({\r\n      barsList: items\r\n    });\r\n    this.setState({\r\n      deactivate: false\r\n    });\r\n  };\r\n\r\n  //QuickSort\r\n  quickChangeColor = (index, color) => {\r\n    var array = this.state.barsList;\r\n    array[index][\"barColor\"] = color;\r\n    this.setState({\r\n      barsList: array\r\n    });\r\n  };\r\n  swap = (leftIndex, rightIndex) => {\r\n    var items = this.state.barsList;\r\n    var temp = items[leftIndex];\r\n    items[leftIndex] = items[rightIndex];\r\n    items[rightIndex] = temp;\r\n    this.setState({\r\n      barsList: items\r\n    });\r\n  };\r\n  partition = async (left, right) => {\r\n    var pivot = this.state.barsList[Math.floor((right + left) / 2)];\r\n\r\n    this.quickChangeColor(this.state.barsList.indexOf(pivot), \"#5c5c5c\");\r\n    var i = left;\r\n    var j = right;\r\n    while (i <= j) {\r\n      while (this.state.barsList[i][\"barHeight\"] < pivot[\"barHeight\"]) {\r\n        i++;\r\n        this.quickChangeColor(i, \"#91d3e3\");\r\n        await timeout(this.state.delay);\r\n        this.quickChangeColor(i, \"beige\");\r\n      }\r\n      while (this.state.barsList[j][\"barHeight\"] > pivot[\"barHeight\"]) {\r\n        j--;\r\n        this.quickChangeColor(j, \"#91d3e3\");\r\n        await timeout(this.state.delay);\r\n        this.quickChangeColor(j, \"beige\");\r\n      }\r\n      if (i <= j) {\r\n        this.swap(i, j);\r\n        i++;\r\n        j--;\r\n      }\r\n    }\r\n\r\n    return i;\r\n  };\r\n\r\n  quickSort = async (left, right) => {\r\n    var index;\r\n    if (this.state.barsList.length > 1) {\r\n      index = await this.partition(left, right);\r\n      this.quickChangeColor(index, \"#91e395\");\r\n      await timeout(this.state.delay);\r\n      this.quickChangeColor(index, \"beige\");\r\n      if (left < index - 1) {\r\n        this.quickSort(left, index - 1);\r\n      }\r\n      if (index < right) {\r\n        this.quickSort(index, right);\r\n      }\r\n    }\r\n  };\r\n\r\n  renderQuickSort = () => {\r\n    this.quickSort(0, this.state.barsList.length - 1);\r\n  };\r\n\r\n  onChangeAlgo = algo => {\r\n    this.setState({\r\n      currentChosenSortingAlgo: algo\r\n    });\r\n  };\r\n\r\n  onChangeSpeed = speed => {\r\n    this.setState({\r\n      delay: speed\r\n    });\r\n  };\r\n\r\n  // merge = async (left, right) => {\r\n  //   //color left and right to red\r\n  //   var indexLeft = 0;\r\n  //   var indexRight = 0;\r\n  //   for (var i = 0; i < this.state.barsList.length; i++) {\r\n  //     if (this.state.barsList[i] === left[0]) {\r\n  //       indexLeft = i;\r\n  //       break;\r\n  //     }\r\n  //   }\r\n  //   for (var i = 0; i < this.state.barsList.length; i++) {\r\n  //     if (this.state.barsList[i] === right[0]) {\r\n  //       indexRight = i;\r\n  //       break;\r\n  //     }\r\n  //   }\r\n  //   for (let i = indexLeft; i < this.state.barsList.length; i++) {\r\n  //     this.quickChangeColor(i, \"red\");\r\n  //   }\r\n  //   for (let i = indexRight; i < this.state.barsList.length; i++) {\r\n  //     this.quickChangeColor(i, \"blue\");\r\n  //   }\r\n  //   await timeout(500);\r\n\r\n  //   let resultArray = [],\r\n  //     leftIndex = 0,\r\n  //     rightIndex = 0;\r\n\r\n  //   while (leftIndex < left.length && rightIndex < right.length) {\r\n  //     if (left[leftIndex][\"barHeight\"] < right[rightIndex][\"barHeight\"]) {\r\n  //       resultArray.push(left[leftIndex]);\r\n  //       leftIndex++;\r\n  //     } else {\r\n  //       resultArray.push(right[rightIndex]);\r\n  //       rightIndex++;\r\n  //     }\r\n  //   }\r\n\r\n  //   for (i = 0; i < this.state.barsList.length; i++) {\r\n  //     this.quickChangeColor(i, \"beige\");\r\n  //   }\r\n  //   await timeout(200);\r\n  //   return resultArray\r\n  //     .concat(left.slice(leftIndex))\r\n  //     .concat(right.slice(rightIndex));\r\n  // };\r\n\r\n  // mergeSort = async unsortedArray => {\r\n  //   if (unsortedArray.length <= 1) {\r\n  //     return unsortedArray;\r\n  //   }\r\n  //   const middle = Math.floor(unsortedArray.length / 2);\r\n  //   const left = unsortedArray.slice(0, middle);\r\n  //   const right = unsortedArray.slice(middle);\r\n  //   return await this.merge(\r\n  //     await this.mergeSort(left),\r\n  //     await this.mergeSort(right)\r\n  //   );\r\n  // };\r\n\r\n  // renderMergeSort = async () => {\r\n  //   var sortedArray = await this.mergeSort(this.state.barsList);\r\n  //   this.setState({\r\n  //     barsList: sortedArray\r\n  //   });\r\n  // };\r\n  insertionSort = async () => {\r\n    var inputArr = this.state.barsList;\r\n    let length = inputArr.length;\r\n    this.setState({\r\n      deactivate: true\r\n    });\r\n    for (let i = 1; i < length; i++) {\r\n      let key = inputArr[i];\r\n      this.quickChangeColor(this.state.barsList.indexOf(key), \"#5c5c5c\");\r\n      await timeout(this.state.delay);\r\n      let j = i - 1;\r\n      while (j >= 0 && inputArr[j][\"barHeight\"] > key[\"barHeight\"]) {\r\n        inputArr[j + 1] = inputArr[j];\r\n        this.quickChangeColor(j + 1, \"#91d3e3\");\r\n        this.setState({\r\n          barsList: inputArr\r\n        });\r\n        await timeout(this.state.delay);\r\n        this.quickChangeColor(j + 1, \"beige\");\r\n        await timeout(this.state.delay);\r\n        j = j - 1;\r\n      }\r\n      inputArr[j + 1] = key;\r\n      this.quickChangeColor(j + 1, \"#91e395\");\r\n    }\r\n    var items = this.state.barsList;\r\n    for (var i = 0; i < items.length; i++) {\r\n      items[i][\"barColor\"] = \"beige\";\r\n    }\r\n    this.setState({\r\n      barsList: items\r\n    });\r\n    this.setState({\r\n      deactivate: false\r\n    });\r\n  };\r\n  sorting = () => {\r\n    if (!this.state.deactivate) {\r\n      if (this.state.currentChosenSortingAlgo === \"BubbleSort\") {\r\n        return this.bubbleSort;\r\n      } else if (this.state.currentChosenSortingAlgo === \"QuickSort\") {\r\n        return this.renderQuickSort;\r\n      } else if (this.state.currentChosenSortingAlgo === \"InsertionSort\") {\r\n        return this.insertionSort;\r\n      }\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"heading\">\r\n            <Heading />\r\n          </div>\r\n        </div>\r\n        <div className=\"row justify-content-center\">\r\n          <a\r\n            href=\"https://github.com/RishabhVerma098/visualsorting\"\r\n            className=\"githubLink\"\r\n            target=\"_blank\"\r\n            rel=\"noopener\"\r\n          >\r\n            <i className=\"fab fa-github\"></i> Github Repo {\"</>\"}\r\n          </a>\r\n        </div>\r\n        <div className=\"row \" style={{ marginTop: \"10px\", marginLeft: \"10%\" }}>\r\n          <button\r\n            type=\"button\"\r\n            class={\r\n              this.state.ds === \"sorting\"\r\n                ? \"btn btn-warning btn-sm\"\r\n                : \"btn btn-outline-warning btn-sm\"\r\n            }\r\n            onClick={() =>\r\n              this.setState({\r\n                ds: \"sorting\"\r\n              })\r\n            }\r\n            style={{ borderRadius: \"15px\" }}\r\n          >\r\n            Sorting\r\n          </button>\r\n\r\n          <button\r\n            type=\"button\"\r\n            class={\r\n              this.state.ds === \"tree\"\r\n                ? \"btn btn-info btn-sm\"\r\n                : \"btn btn-outline-info btn-sm\"\r\n            }\r\n            style={{ marginLeft: \"10px\", borderRadius: \"15px\" }}\r\n            onClick={() =>\r\n              this.setState({\r\n                ds: \"tree\"\r\n              })\r\n            }\r\n          >\r\n            Binary Search Tress\r\n          </button>\r\n        </div>\r\n        <div className=\"row justify-content-center \">\r\n          {this.state.ds === \"sorting\" ? (\r\n            <SortingPlate\r\n              numberOfBars={this.state.numberOfBars}\r\n              addBars={addBars(this.state.barsList)}\r\n              barsList={this.state.barsList}\r\n              slider={this.handleChange}\r\n              Sort={this.sorting()}\r\n              onChangeAlgo={this.onChangeAlgo}\r\n              onChangeSpeed={this.onChangeSpeed}\r\n            />\r\n          ) : (\r\n            <BSTPlate />\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}