{"version":3,"sources":["components/bars/addBars.js","components/helperfunctions/helper.js","components/pretto.js","components/sortingPlate.js","components/heading.js","App.js","index.js"],"names":["addBars","barsList","color","height","tempBarList","i","length","push","duration","className","style","backgroundColor","toString","width","marginLeft","borderBottomLeftRadius","borderBottomRightRadius","fontSize","fontWeight","textAlign","getRandomInt","min","max","Math","ceil","floor","random","timeout","ms","Promise","resolve","setTimeout","PrettoSlider","withStyles","root","thumb","border","marginTop","boxShadow","active","valueLabel","left","track","borderRadius","rail","Slider","SortingPlate","state","currentAlgo","delay","onChange","props","onChangeAlgo","onChangeSpeed","changeAlogFromDropDown","algo","setState","changeDelay","showSpeed","this","class","numberOfBars","valueLabelDisplay","aria-label","defaultValue","slider","Dropdown","Toggle","variant","id","Menu","Item","as","onClick","type","Sort","Component","Heading","options","strings","autoStart","loop","App","currentChosenSortingAlgo","deactivate","handleChange","event","newValue","addelementsTolist","barHeight","barColor","changeColor","array","index","bubbleSort","a","items","j","tmp","quickChangeColor","swap","leftIndex","rightIndex","temp","partition","right","pivot","indexOf","quickSort","renderQuickSort","speed","insertionSort","inputArr","key","sorting","React","ReactDOM","render","document","getElementById"],"mappings":"gTAoCeA,EAjBD,SAAAC,GAEZ,IADA,IAhBcC,EAAOC,EAgBjBC,EAAc,GACTC,EAAI,EAAGA,EAAIJ,EAASK,OAAQD,IACnCD,EAAYG,KACV,kBAAC,IAAD,CAAeC,SAAU,IAAKL,OAAQF,EAASI,GAAT,WACpC,yBACEI,UAAU,MACVC,OAtBMR,EAsBUD,EAASI,GAAT,SAtBHF,EAsB4BF,EAASI,GAAT,UApB1C,CACLM,gBAAiBT,EACjBC,OAHMA,EAAOS,WAAa,KAI1BC,MAAO,QACPC,WAAY,OACZC,uBAAwB,MACxBC,wBAAyB,MACzBC,SAAU,QACVC,WAAY,MACZC,UAAW,YAaJlB,EAASI,GAAT,aAKT,OAAOD,GCjCIgB,EAAe,SAACC,EAAKC,GAGhC,OAFAD,EAAME,KAAKC,KAAKH,GAChBC,EAAMC,KAAKE,MAAMH,GACVC,KAAKE,MAAMF,KAAKG,UAAYJ,EAAMD,IAAQA,GAEtCM,EAAU,SAAAC,GACrB,OAAO,IAAIC,QAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,M,gBC0BrCI,EA9BMC,YAAW,CAC9BC,KAAM,CACJhC,MAAO,UACPC,OAAQ,GAEVgC,MAAO,CACLhC,OAAQ,GACRU,MAAO,GACPF,gBAAiB,OACjByB,OAAQ,yBACRC,WAAY,EACZvB,YAAa,GACb,2BAA4B,CAC1BwB,UAAW,YAGfC,OAAQ,GACRC,WAAY,CACVC,KAAM,oBAERC,MAAO,CACLvC,OAAQ,EACRwC,aAAc,GAEhBC,KAAM,CACJzC,OAAQ,EACRwC,aAAc,IA1BGV,CA4BlBY,K,QC8GYC,E,2MAvIbC,MAAQ,CACNC,YAAa,aACbC,MAAO,K,EAETC,SAAW,WACT,EAAKC,MAAMC,aAAa,EAAKL,MAAMC,c,EAGrCK,cAAgB,WACd,EAAKF,MAAME,cAAc,EAAKN,MAAME,Q,EAEtCK,uBAAyB,SAAAC,GACvB,EAAKC,SACH,CACER,YAAaO,GAEf,EAAKL,W,EAITO,YAAc,SAAAR,GACZ,EAAKO,SACH,CACEP,MAAOA,GAET,EAAKI,gB,EAITK,UAAY,WACV,OAAyB,MAArB,EAAKX,MAAME,MACN,OACuB,MAArB,EAAKF,MAAME,MACb,SAEA,Q,wEAGD,IAAD,OACP,OACE,yBAAKxC,UAAU,mBACb,yBAAKA,UAAU,cAAckD,KAAKR,MAAMnD,SACxC,yBAAKS,UAAU,cACb,yBAAKA,UAAU,UACb,0BAAMA,UAAU,eAAhB,+BAC+B,IAC7B,0BAAMmD,MAAM,kCAAZ,YACY,IACV,0BAAMA,MAAM,qBAAqBD,KAAKR,MAAMU,gBAGhD,kBAAC,EAAD,CACEpD,UAAU,QACVqD,kBAAkB,OAClBC,aAAW,gBACXC,aAAc,GACd1C,IAAI,KACJD,IAAI,IACJ6B,SAAUS,KAAKR,MAAMc,UAGzB,yBAAKxD,UAAU,aACb,yBAAKA,UAAU,oBACb,kBAACyD,EAAA,EAAD,KACE,kBAACA,EAAA,EAASC,OAAV,CAAiBC,QAAQ,UAAUC,GAAG,kBACnCV,KAAKZ,MAAMC,aAGd,kBAACkB,EAAA,EAASI,KAAV,KACE,kBAACJ,EAAA,EAASK,KAAV,CACEC,GAAG,SAEHC,QAAS,kBAAM,EAAKnB,uBAAuB,gBAH7C,cAOA,kBAACY,EAAA,EAASK,KAAV,CACEC,GAAG,SACHC,QAAS,kBAAM,EAAKnB,uBAAuB,eAF7C,aAMA,kBAACY,EAAA,EAASK,KAAV,CACEC,GAAG,SACHC,QAAS,kBAAM,EAAKnB,uBAAuB,mBAF7C,oBASN,yBAAK7C,UAAU,kBACb,kBAACyD,EAAA,EAAD,KACE,kBAACA,EAAA,EAASC,OAAV,CAAiBC,QAAQ,UAAUC,GAAG,kBACnCV,KAAKD,aAGR,kBAACQ,EAAA,EAASI,KAAV,KACE,kBAACJ,EAAA,EAASK,KAAV,CACEC,GAAG,SACHC,QAAS,kBAAM,EAAKhB,YAAY,OAFlC,QAMA,kBAACS,EAAA,EAASK,KAAV,CACEC,GAAG,SACHC,QAAS,kBAAM,EAAKhB,YAAY,OAFlC,UAMA,kBAACS,EAAA,EAASK,KAAV,CACEC,GAAG,SACHC,QAAS,kBAAM,EAAKhB,YAAY,OAFlC,YAUR,yBAAKhD,UAAU,cACb,4BACEiE,KAAK,SACLd,MAAM,+BACNa,QAASd,KAAKR,MAAMwB,MAHtB,e,GA1HeC,a,iBCkBZC,E,2MAnBb9B,MAAQ,G,wEAEN,OACE,yBAAKtC,UAAU,WACb,0BAAMA,UAAU,iBACd,kBAAC,IAAD,CACEqE,QAAS,CACPC,QAAS,CAAC,sBACVC,WAAW,EACXC,MAAM,EACNhC,MAAO,a,GAXC2B,aCoTPM,E,2MA5SbnC,MAAQ,CACN9C,SAAU,GACV4D,aAAc,GACdZ,MAAO,IACPkC,yBAA0B,aAC1BC,YAAY,G,EAQdC,aAAe,SAACC,EAAOC,GAChB,EAAKxC,MAAMqC,aACd,EAAK5B,SAAS,CAAEK,aAAc0B,IAC9B,EAAKC,sB,EAITA,kBAAoB,WAIlB,IAHA,IAAInF,EAAI,EACJF,EAAS,EACTC,EAAc,GACXC,EAAI,EAAK0C,MAAMc,cACpB1D,EAASiB,EAAa,GAAI,KAC1BhB,EAAYG,KAAK,CACfkF,UAAWtF,EACXuF,SAAU,UAEZrF,GAAQ,EAEV,EAAKmD,SAAS,CACZvD,SAAUG,K,EAIduF,YAAc,SAACC,EAAOC,EAAO3F,GAK3B,OAJA0F,EAAMC,GAAN,SAA2B3F,EAC3B,EAAKsD,SAAS,CACZvD,SAAU2F,IAELA,G,EAITE,W,qBAAa,oCAAAC,EAAA,qDACX,EAAKvC,SAAS,CACZ4B,YAAY,IAEVY,EAAQ,EAAKjD,MAAM9C,SACnBK,EAAS0F,EAAM1F,OACVD,EAAI,EANF,YAMKA,EAAIC,GANT,iBAOA2F,EAAI,EAPJ,YAOOA,EAAI3F,EAASD,EAAI,GAPxB,wBAQH2F,EAAMC,GAAN,UAAwBD,EAAMC,EAAI,GAAV,YAC1BD,EAAQ,EAAKL,YAAYK,EAAOC,EAAG,WACnCD,EAAQ,EAAKL,YAAYK,EAAOC,EAAI,EAAG,WAEnCC,EAAMF,EAAMC,GAAN,UACVD,EAAMC,GAAN,UAAwBD,EAAMC,EAAI,GAAV,UACxBD,EAAMC,EAAI,GAAV,UAA4BC,GAdvB,UAgBDvE,EAAQ,EAAKoB,MAAME,OAhBlB,QAiBP+C,EAAQ,EAAKL,YAAYK,EAAOC,EAAG,SACnCD,EAAQ,EAAKL,YAAYK,EAAOC,EAAI,EAAG,WAEvC,EAAKzC,SAAS,CACZvD,SAAU+F,IArBL,QAO2BC,IAP3B,uBAMiB5F,IANjB,uBA0BX,IADI2F,EAAQ,EAAKjD,MAAM9C,SACdI,EAAI,EAAGA,EAAIC,EAAQD,IAC1B2F,EAAM3F,GAAN,SAAuB,QAEzB,EAAKmD,SAAS,CACZvD,SAAU+F,IAEZ,EAAKxC,SAAS,CACZ4B,YAAY,IAjCH,0C,EAsCbe,iBAAmB,SAACN,EAAO3F,GACzB,IAAI0F,EAAQ,EAAK7C,MAAM9C,SACvB2F,EAAMC,GAAN,SAA2B3F,EAC3B,EAAKsD,SAAS,CACZvD,SAAU2F,K,EAGdQ,KAAO,SAACC,EAAWC,GACjB,IAAIN,EAAQ,EAAKjD,MAAM9C,SACnBsG,EAAOP,EAAMK,GACjBL,EAAMK,GAAaL,EAAMM,GACzBN,EAAMM,GAAcC,EACpB,EAAK/C,SAAS,CACZvD,SAAU+F,K,EAGdQ,U,sCAAY,WAAO/D,EAAMgE,GAAb,mBAAAV,EAAA,qDACNW,EAAQ,EAAK3D,MAAM9C,SAASsB,KAAKE,OAAOgF,EAAQhE,GAAQ,IAE5D,EAAK0D,iBAAiB,EAAKpD,MAAM9C,SAAS0G,QAAQD,GAAQ,WACtDrG,EAAIoC,EACJwD,EAAIQ,EALE,YAMHpG,GAAK4F,GANF,6BAOD,EAAKlD,MAAM9C,SAASI,GAApB,UAAsCqG,EAAK,WAP1C,wBAQNrG,IACA,EAAK8F,iBAAiB9F,EAAG,WATnB,UAUAsB,EAAQ,EAAKoB,MAAME,OAVnB,QAWN,EAAKkD,iBAAiB9F,EAAG,SAXnB,4BAaD,EAAK0C,MAAM9C,SAASgG,GAApB,UAAsCS,EAAK,WAb1C,wBAcNT,IACA,EAAKE,iBAAiBF,EAAG,WAfnB,UAgBAtE,EAAQ,EAAKoB,MAAME,OAhBnB,QAiBN,EAAKkD,iBAAiBF,EAAG,SAjBnB,wBAmBJ5F,GAAK4F,IACP,EAAKG,KAAK/F,EAAG4F,GACb5F,IACA4F,KAtBM,gDA0BH5F,GA1BG,0C,0DA6BZuG,U,sCAAY,WAAOnE,EAAMgE,GAAb,eAAAV,EAAA,0DAEN,EAAKhD,MAAM9C,SAASK,OAAS,GAFvB,iCAGM,EAAKkG,UAAU/D,EAAMgE,GAH3B,cAGRZ,EAHQ,OAIR,EAAKM,iBAAiBN,EAAO,WAJrB,SAKFlE,EAAQ,EAAKoB,MAAME,OALjB,OAMR,EAAKkD,iBAAiBN,EAAO,SACzBpD,EAAOoD,EAAQ,GACjB,EAAKe,UAAUnE,EAAMoD,EAAQ,GAE3BA,EAAQY,GACV,EAAKG,UAAUf,EAAOY,GAXhB,0C,0DAgBZI,gBAAkB,WAChB,EAAKD,UAAU,EAAG,EAAK7D,MAAM9C,SAASK,OAAS,I,EAGjD8C,aAAe,SAAAG,GACb,EAAKC,SAAS,CACZ2B,yBAA0B5B,K,EAI9BF,cAAgB,SAAAyD,GACd,EAAKtD,SAAS,CACZP,MAAO6D,K,EAsEXC,c,qBAAgB,wCAAAhB,EAAA,qDACViB,EAAW,EAAKjE,MAAM9C,SACtBK,EAAS0G,EAAS1G,OACtB,EAAKkD,SAAS,CACZ4B,YAAY,IAEL/E,EAAI,EANC,YAMEA,EAAIC,GANN,wBAOR2G,EAAMD,EAAS3G,GACnB,EAAK8F,iBAAiB,EAAKpD,MAAM9C,SAAS0G,QAAQM,GAAM,WAR5C,SASNtF,EAAQ,EAAKoB,MAAME,OATb,OAURgD,EAAI5F,EAAI,EAVA,aAWL4F,GAAK,GAAKe,EAASf,GAAT,UAA2BgB,EAAG,WAXnC,wBAYVD,EAASf,EAAI,GAAKe,EAASf,GAC3B,EAAKE,iBAAiBF,EAAI,EAAG,WAC7B,EAAKzC,SAAS,CACZvD,SAAU+G,IAfF,UAiBJrF,EAAQ,EAAKoB,MAAME,OAjBf,eAkBV,EAAKkD,iBAAiBF,EAAI,EAAG,SAlBnB,UAmBJtE,EAAQ,EAAKoB,MAAME,OAnBf,QAoBVgD,GAAQ,EApBE,wBAsBZe,EAASf,EAAI,GAAKgB,EAClB,EAAKd,iBAAiBF,EAAI,EAAG,WAvBjB,QAMc5F,IANd,uBA0Bd,IADI2F,EAAQ,EAAKjD,MAAM9C,SACdI,EAAI,EAAGA,EAAI2F,EAAM1F,OAAQD,IAChC2F,EAAM3F,GAAN,SAAuB,QAEzB,EAAKmD,SAAS,CACZvD,SAAU+F,IAEZ,EAAKxC,SAAS,CACZ4B,YAAY,IAjCA,0C,EAoChB8B,QAAU,WACR,OAAK,EAAKnE,MAAMqC,WASP,KARqC,eAAxC,EAAKrC,MAAMoC,yBACN,EAAKW,WACqC,cAAxC,EAAK/C,MAAMoC,yBACb,EAAK0B,gBACqC,kBAAxC,EAAK9D,MAAMoC,yBACb,EAAK4B,mBADP,G,oFApQTpD,KAAK6B,oBACLxF,EAAQ2D,KAAKZ,MAAM9C,Y,+BA4QnB,OACE,yBAAKQ,UAAU,mBACb,yBAAKA,UAAU,8BACb,yBAAKA,UAAU,WACb,kBAAC,EAAD,QAGJ,yBAAKA,UAAU,8BACb,kBAAC,EAAD,CACEoD,aAAcF,KAAKZ,MAAMc,aACzB7D,QAASA,EAAQ2D,KAAKZ,MAAM9C,UAC5BA,SAAU0D,KAAKZ,MAAM9C,SACrBgE,OAAQN,KAAK0B,aACbV,KAAMhB,KAAKuD,UACX9D,aAAcO,KAAKP,aACnBC,cAAeM,KAAKN,sB,GAtSd8D,IAAMvC,WCLxBwC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.f3ac1ea1.chunk.js","sourcesContent":["import React from \"react\";\r\nimport AnimateHeight from \"react-animate-height\";\r\nimport \"../../App.css\";\r\n//Temporary\r\nvar barStyle = (color, height) => {\r\n  var h = height.toString() + \"px\";\r\n  return {\r\n    backgroundColor: color,\r\n    height: h,\r\n    width: \"1.8vw\",\r\n    marginLeft: \"10px\",\r\n    borderBottomLeftRadius: \"4px\",\r\n    borderBottomRightRadius: \"4px\",\r\n    fontSize: \"0.7vw\",\r\n    fontWeight: \"200\",\r\n    textAlign: \"center\"\r\n  };\r\n};\r\n\r\nvar addBars = barsList => {\r\n  var tempBarList = [];\r\n  for (let i = 0; i < barsList.length; i++) {\r\n    tempBarList.push(\r\n      <AnimateHeight duration={500} height={barsList[i][\"barHeight\"]}>\r\n        <div\r\n          className=\"Bar\"\r\n          style={barStyle(barsList[i][\"barColor\"], barsList[i][\"barHeight\"])}\r\n        >\r\n          {barsList[i][\"barHeight\"]}\r\n        </div>\r\n      </AnimateHeight>\r\n    );\r\n  }\r\n  return tempBarList;\r\n};\r\n\r\nexport default addBars;\r\n","export const getRandomInt = (min, max) => {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min)) + min; //The maximum is exclusive and the minimum is inclusive\r\n};\r\nexport const timeout = ms => {\r\n  return new Promise(resolve => setTimeout(resolve, ms));\r\n};\r\n","import { withStyles } from \"@material-ui/core/styles\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nconst PrettoSlider = withStyles({\r\n  root: {\r\n    color: \"#52af77\",\r\n    height: 6\r\n  },\r\n  thumb: {\r\n    height: 24,\r\n    width: 24,\r\n    backgroundColor: \"#fff\",\r\n    border: \"2px solid currentColor\",\r\n    marginTop: -8,\r\n    marginLeft: -12,\r\n    \"&:focus,&:hover,&$active\": {\r\n      boxShadow: \"inherit\"\r\n    }\r\n  },\r\n  active: {},\r\n  valueLabel: {\r\n    left: \"calc(-50% + 4px)\"\r\n  },\r\n  track: {\r\n    height: 6,\r\n    borderRadius: 4\r\n  },\r\n  rail: {\r\n    height: 6,\r\n    borderRadius: 4\r\n  }\r\n})(Slider);\r\n\r\nexport default PrettoSlider;\r\n","import React, { Component } from \"react\";\r\n\r\nimport PrettoSlider from \"./pretto\";\r\nimport { Dropdown } from \"react-bootstrap\";\r\nclass SortingPlate extends Component {\r\n  state = {\r\n    currentAlgo: \"BubbleSort\",\r\n    delay: 400\r\n  };\r\n  onChange = () => {\r\n    this.props.onChangeAlgo(this.state.currentAlgo);\r\n  };\r\n\r\n  onChangeSpeed = () => {\r\n    this.props.onChangeSpeed(this.state.delay);\r\n  };\r\n  changeAlogFromDropDown = algo => {\r\n    this.setState(\r\n      {\r\n        currentAlgo: algo\r\n      },\r\n      this.onChange\r\n    );\r\n  };\r\n\r\n  changeDelay = delay => {\r\n    this.setState(\r\n      {\r\n        delay: delay\r\n      },\r\n      this.onChangeSpeed\r\n    );\r\n  };\r\n\r\n  showSpeed = () => {\r\n    if (this.state.delay === 600) {\r\n      return \"Slow\";\r\n    } else if (this.state.delay === 400) {\r\n      return \"Medium\";\r\n    } else {\r\n      return \"Fast\";\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"container-plate\">\r\n        <div className=\"container1\">{this.props.addBars}</div>\r\n        <div className=\"container2\">\r\n          <div className=\"slider\">\r\n            <span className=\"sliderTitle\">\r\n              Slide to add or delete bars,{\" \"}\r\n              <span class=\"badge badge-pill badge-success\">\r\n                Currently{\" \"}\r\n                <span class=\"badge badge-light\">{this.props.numberOfBars}</span>\r\n              </span>\r\n            </span>\r\n            <PrettoSlider\r\n              className=\"slide\"\r\n              valueLabelDisplay=\"auto\"\r\n              aria-label=\"pretto slider\"\r\n              defaultValue={10}\r\n              max=\"15\"\r\n              min=\"2\"\r\n              onChange={this.props.slider}\r\n            />\r\n          </div>\r\n          <div className=\"dropDowns\">\r\n            <div className=\"sortingTechnique\">\r\n              <Dropdown>\r\n                <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n                  {this.state.currentAlgo}\r\n                </Dropdown.Toggle>\r\n\r\n                <Dropdown.Menu>\r\n                  <Dropdown.Item\r\n                    as=\"button\"\r\n                    //if you want to pass info from a button use arrow func inside onClick/onSelect VERY IMPORTTANT\r\n                    onClick={() => this.changeAlogFromDropDown(\"BubbleSort\")}\r\n                  >\r\n                    BubbleSort\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Item\r\n                    as=\"button\"\r\n                    onClick={() => this.changeAlogFromDropDown(\"QuickSort\")}\r\n                  >\r\n                    QuickSort\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Item\r\n                    as=\"button\"\r\n                    onClick={() => this.changeAlogFromDropDown(\"InsertionSort\")}\r\n                  >\r\n                    InsertionSort\r\n                  </Dropdown.Item>\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </div>\r\n            <div className=\"speedOfSorting\">\r\n              <Dropdown>\r\n                <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n                  {this.showSpeed()}\r\n                </Dropdown.Toggle>\r\n\r\n                <Dropdown.Menu>\r\n                  <Dropdown.Item\r\n                    as=\"button\"\r\n                    onClick={() => this.changeDelay(600)}\r\n                  >\r\n                    Slow\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Item\r\n                    as=\"button\"\r\n                    onClick={() => this.changeDelay(400)}\r\n                  >\r\n                    Medium\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Item\r\n                    as=\"button\"\r\n                    onClick={() => this.changeDelay(200)}\r\n                  >\r\n                    Fast\r\n                  </Dropdown.Item>\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </div>\r\n          </div>\r\n          <div className=\"sortButton\">\r\n            <button\r\n              type=\"button\"\r\n              class=\"btn btn-warning btn-sm sort \"\r\n              onClick={this.props.Sort}\r\n            >\r\n              Sort\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SortingPlate;\r\n","import React, { Component } from \"react\";\r\nimport Typewriter from \"typewriter-effect\";\r\nclass Heading extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div className=\"Heading\">\r\n        <span className=\"visualsorting\">\r\n          <Typewriter\r\n            options={{\r\n              strings: [\"Visual Sorting ...\"],\r\n              autoStart: true,\r\n              loop: true,\r\n              delay: 200\r\n            }}\r\n          />\r\n        </span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Heading;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport addBars from \"./components/bars/addBars\";\r\n\r\nimport { getRandomInt, timeout } from \"./components/helperfunctions/helper\";\r\n\r\nimport SortingPlate from \"./components/sortingPlate\";\r\nimport Heading from \"./components/heading\";\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    barsList: [],\r\n    numberOfBars: 13,\r\n    delay: 400,\r\n    currentChosenSortingAlgo: \"BubbleSort\",\r\n    deactivate: false\r\n  };\r\n\r\n  componentWillMount() {\r\n    this.addelementsTolist();\r\n    addBars(this.state.barsList);\r\n  }\r\n\r\n  handleChange = (event, newValue) => {\r\n    if (!this.state.deactivate) {\r\n      this.setState({ numberOfBars: newValue });\r\n      this.addelementsTolist();\r\n    }\r\n  };\r\n\r\n  addelementsTolist = () => {\r\n    var i = 0;\r\n    var height = 0;\r\n    var tempBarList = [];\r\n    while (i < this.state.numberOfBars) {\r\n      height = getRandomInt(10, 230);\r\n      tempBarList.push({\r\n        barHeight: height,\r\n        barColor: \"beige\"\r\n      });\r\n      i = i + 1;\r\n    }\r\n    this.setState({\r\n      barsList: tempBarList\r\n    });\r\n  };\r\n\r\n  changeColor = (array, index, color) => {\r\n    array[index][\"barColor\"] = color;\r\n    this.setState({\r\n      barsList: array\r\n    });\r\n    return array;\r\n  };\r\n\r\n  //Bubble Sort\r\n  bubbleSort = async () => {\r\n    this.setState({\r\n      deactivate: true\r\n    });\r\n    var items = this.state.barsList;\r\n    var length = items.length;\r\n    for (var i = 0; i < length; i++) {\r\n      for (var j = 0; j < length - i - 1; j++) {\r\n        if (items[j][\"barHeight\"] > items[j + 1][\"barHeight\"]) {\r\n          items = this.changeColor(items, j, \"#91d3e3\");\r\n          items = this.changeColor(items, j + 1, \"#91d3e3\");\r\n\r\n          var tmp = items[j][\"barHeight\"];\r\n          items[j][\"barHeight\"] = items[j + 1][\"barHeight\"];\r\n          items[j + 1][\"barHeight\"] = tmp;\r\n        }\r\n        await timeout(this.state.delay);\r\n        items = this.changeColor(items, j, \"beige\");\r\n        items = this.changeColor(items, j + 1, \"#91e395\");\r\n\r\n        this.setState({\r\n          barsList: items\r\n        });\r\n      }\r\n    }\r\n    var items = this.state.barsList;\r\n    for (var i = 0; i < length; i++) {\r\n      items[i][\"barColor\"] = \"beige\";\r\n    }\r\n    this.setState({\r\n      barsList: items\r\n    });\r\n    this.setState({\r\n      deactivate: false\r\n    });\r\n  };\r\n\r\n  //QuickSort\r\n  quickChangeColor = (index, color) => {\r\n    var array = this.state.barsList;\r\n    array[index][\"barColor\"] = color;\r\n    this.setState({\r\n      barsList: array\r\n    });\r\n  };\r\n  swap = (leftIndex, rightIndex) => {\r\n    var items = this.state.barsList;\r\n    var temp = items[leftIndex];\r\n    items[leftIndex] = items[rightIndex];\r\n    items[rightIndex] = temp;\r\n    this.setState({\r\n      barsList: items\r\n    });\r\n  };\r\n  partition = async (left, right) => {\r\n    var pivot = this.state.barsList[Math.floor((right + left) / 2)];\r\n\r\n    this.quickChangeColor(this.state.barsList.indexOf(pivot), \"#5c5c5c\");\r\n    var i = left;\r\n    var j = right;\r\n    while (i <= j) {\r\n      while (this.state.barsList[i][\"barHeight\"] < pivot[\"barHeight\"]) {\r\n        i++;\r\n        this.quickChangeColor(i, \"#91d3e3\");\r\n        await timeout(this.state.delay);\r\n        this.quickChangeColor(i, \"beige\");\r\n      }\r\n      while (this.state.barsList[j][\"barHeight\"] > pivot[\"barHeight\"]) {\r\n        j--;\r\n        this.quickChangeColor(j, \"#91d3e3\");\r\n        await timeout(this.state.delay);\r\n        this.quickChangeColor(j, \"beige\");\r\n      }\r\n      if (i <= j) {\r\n        this.swap(i, j);\r\n        i++;\r\n        j--;\r\n      }\r\n    }\r\n\r\n    return i;\r\n  };\r\n\r\n  quickSort = async (left, right) => {\r\n    var index;\r\n    if (this.state.barsList.length > 1) {\r\n      index = await this.partition(left, right);\r\n      this.quickChangeColor(index, \"#91e395\");\r\n      await timeout(this.state.delay);\r\n      this.quickChangeColor(index, \"beige\");\r\n      if (left < index - 1) {\r\n        this.quickSort(left, index - 1);\r\n      }\r\n      if (index < right) {\r\n        this.quickSort(index, right);\r\n      }\r\n    }\r\n  };\r\n\r\n  renderQuickSort = () => {\r\n    this.quickSort(0, this.state.barsList.length - 1);\r\n  };\r\n\r\n  onChangeAlgo = algo => {\r\n    this.setState({\r\n      currentChosenSortingAlgo: algo\r\n    });\r\n  };\r\n\r\n  onChangeSpeed = speed => {\r\n    this.setState({\r\n      delay: speed\r\n    });\r\n  };\r\n\r\n  // merge = async (left, right) => {\r\n  //   //color left and right to red\r\n  //   var indexLeft = 0;\r\n  //   var indexRight = 0;\r\n  //   for (var i = 0; i < this.state.barsList.length; i++) {\r\n  //     if (this.state.barsList[i] === left[0]) {\r\n  //       indexLeft = i;\r\n  //       break;\r\n  //     }\r\n  //   }\r\n  //   for (var i = 0; i < this.state.barsList.length; i++) {\r\n  //     if (this.state.barsList[i] === right[0]) {\r\n  //       indexRight = i;\r\n  //       break;\r\n  //     }\r\n  //   }\r\n  //   for (let i = indexLeft; i < this.state.barsList.length; i++) {\r\n  //     this.quickChangeColor(i, \"red\");\r\n  //   }\r\n  //   for (let i = indexRight; i < this.state.barsList.length; i++) {\r\n  //     this.quickChangeColor(i, \"blue\");\r\n  //   }\r\n  //   await timeout(500);\r\n\r\n  //   let resultArray = [],\r\n  //     leftIndex = 0,\r\n  //     rightIndex = 0;\r\n\r\n  //   while (leftIndex < left.length && rightIndex < right.length) {\r\n  //     if (left[leftIndex][\"barHeight\"] < right[rightIndex][\"barHeight\"]) {\r\n  //       resultArray.push(left[leftIndex]);\r\n  //       leftIndex++;\r\n  //     } else {\r\n  //       resultArray.push(right[rightIndex]);\r\n  //       rightIndex++;\r\n  //     }\r\n  //   }\r\n\r\n  //   for (i = 0; i < this.state.barsList.length; i++) {\r\n  //     this.quickChangeColor(i, \"beige\");\r\n  //   }\r\n  //   await timeout(200);\r\n  //   return resultArray\r\n  //     .concat(left.slice(leftIndex))\r\n  //     .concat(right.slice(rightIndex));\r\n  // };\r\n\r\n  // mergeSort = async unsortedArray => {\r\n  //   if (unsortedArray.length <= 1) {\r\n  //     return unsortedArray;\r\n  //   }\r\n  //   const middle = Math.floor(unsortedArray.length / 2);\r\n  //   const left = unsortedArray.slice(0, middle);\r\n  //   const right = unsortedArray.slice(middle);\r\n  //   return await this.merge(\r\n  //     await this.mergeSort(left),\r\n  //     await this.mergeSort(right)\r\n  //   );\r\n  // };\r\n\r\n  // renderMergeSort = async () => {\r\n  //   var sortedArray = await this.mergeSort(this.state.barsList);\r\n  //   this.setState({\r\n  //     barsList: sortedArray\r\n  //   });\r\n  // };\r\n  insertionSort = async () => {\r\n    var inputArr = this.state.barsList;\r\n    let length = inputArr.length;\r\n    this.setState({\r\n      deactivate: true\r\n    });\r\n    for (let i = 1; i < length; i++) {\r\n      let key = inputArr[i];\r\n      this.quickChangeColor(this.state.barsList.indexOf(key), \"#5c5c5c\");\r\n      await timeout(this.state.delay);\r\n      let j = i - 1;\r\n      while (j >= 0 && inputArr[j][\"barHeight\"] > key[\"barHeight\"]) {\r\n        inputArr[j + 1] = inputArr[j];\r\n        this.quickChangeColor(j + 1, \"#91d3e3\");\r\n        this.setState({\r\n          barsList: inputArr\r\n        });\r\n        await timeout(this.state.delay);\r\n        this.quickChangeColor(j + 1, \"beige\");\r\n        await timeout(this.state.delay);\r\n        j = j - 1;\r\n      }\r\n      inputArr[j + 1] = key;\r\n      this.quickChangeColor(j + 1, \"#91e395\");\r\n    }\r\n    var items = this.state.barsList;\r\n    for (var i = 0; i < items.length; i++) {\r\n      items[i][\"barColor\"] = \"beige\";\r\n    }\r\n    this.setState({\r\n      barsList: items\r\n    });\r\n    this.setState({\r\n      deactivate: false\r\n    });\r\n  };\r\n  sorting = () => {\r\n    if (!this.state.deactivate) {\r\n      if (this.state.currentChosenSortingAlgo === \"BubbleSort\") {\r\n        return this.bubbleSort;\r\n      } else if (this.state.currentChosenSortingAlgo === \"QuickSort\") {\r\n        return this.renderQuickSort;\r\n      } else if (this.state.currentChosenSortingAlgo === \"InsertionSort\") {\r\n        return this.insertionSort;\r\n      }\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"heading\">\r\n            <Heading />\r\n          </div>\r\n        </div>\r\n        <div className=\"row justify-content-center\">\r\n          <SortingPlate\r\n            numberOfBars={this.state.numberOfBars}\r\n            addBars={addBars(this.state.barsList)}\r\n            barsList={this.state.barsList}\r\n            slider={this.handleChange}\r\n            Sort={this.sorting()}\r\n            onChangeAlgo={this.onChangeAlgo}\r\n            onChangeSpeed={this.onChangeSpeed}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}